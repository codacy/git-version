version: 2.1

orbs:
  codacy: codacy/base@2.5.0

# Re-usable blocks to reduce boilerplate in job definitions.
references:
  default_machine_job: &default_machine_job
    machine: true
    working_directory: ~/workdir

  set_version_env_variable: &set_version_env_variable
    run:
      name: Define Environment Variable VERSION and ENV at Runtime
      command: |
        echo export VERSION=$(cat .version) >> $BASH_ENV
        source $BASH_ENV
        echo $VERSION

jobs:
  compile:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - run:
          name: Get version
          command: |
            sudo apt-get update
            sudo apt-get install libevent-core-2.0-5 libevent-dev libevent-extra-2.0-5 libevent-openssl-2.0-5 libevent-pthreads-2.0-5 libgmp-dev libgmpxx4ldbl libssl-dev libxml2-dev libyaml-dev libreadline-dev automake libtool git llvm libpcre3-dev build-essential -y
            wget https://github.com/crystal-lang/crystal/releases/download/0.30.1/crystal_0.30.1-1_amd64.deb
            sudo dpkg -i crystal_0.30.1-1_amd64.deb
            sudo make clean test build
            ./bin/git-version > .version
      - persist_to_workspace:
          root: ~/workdir
          paths:
            - "*"
      - store_artifacts:
          path: bin

  build_docker:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - *set_version_env_variable
      - run:
          name: Build Docker image
          command: make docker_build
      - run:
          name: Save docker to file
          command: |
            docker save --output docker-image.tar codacy/git-version:$VERSION
      - persist_to_workspace:
          root: ~/workdir
          paths:
            - docker-image.tar

  build_static:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - *set_version_env_variable
      - run:
          name: Compile
          command: make clean buildStatic
      - persist_to_workspace:
          root: ~/workdir
          paths:
            - "*"
      - store_artifacts:
          path: bin

  publish_versioned:
    <<: *default_machine_job
    environment:
      PROJECT_NAME: $CIRCLE_PROJECT_REPONAME
    steps:
      - attach_workspace:
          at: ~/workdir
      - run:
          name: Load docker from file
          command: docker load --input docker-image.tar
      - run:
          name: Publish images to Docker Hub
          command: make push-docker-image

  publish_latest:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - *set_version_env_variable
      - run:
          name: Load docker from file
          command: docker load --input docker-image.tar
      - run:
          name: Publish latest image to Docker Hub
          command: make push-latest-docker-image

workflows:
  version: 2
  publish:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore: master
      - compile:
          requires:
            - codacy/checkout_and_version
      - build_docker:
          requires:
            - compile
      - manual_approval:
          type: approval
          requires:
            - build_docker
      - publish_versioned:
          requires:
            - manual_approval
          context: CodacyDocker
      - codacy/tag_version:
          context: CodacyAWS
          requires:
            - publish_versioned

  publish_master:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              only: master
      - compile:
          requires:
            - codacy/checkout_and_version
      - build_static:
          requires:
            - compile
      - codacy/publish_ghr:
          path: ~/workdir/bin/
          requires:
            - build_static
          context: CodacyAWS
      - build_docker:
          requires:
            - compile
      - publish_versioned:
          requires:
            - build_docker
          context: CodacyDocker
      - publish_latest:
          requires:
            - publish_versioned
          context: CodacyDocker
      - codacy/tag_version:
          context: CodacyAWS
          requires:
            - publish_versioned
